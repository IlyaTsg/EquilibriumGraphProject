# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'test.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

import networkx as nx
from networkx.readwrite import edgelist
import pandas as pd
import matplotlib.pyplot as plt


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.DownloadGraph = QtWidgets.QPushButton(self.centralwidget)
        self.DownloadGraph.setGeometry(QtCore.QRect(240, 60, 281, 51))
        self.DownloadGraph.setObjectName("DownloadGraph")
        self.ShowGraph = QtWidgets.QPushButton(self.centralwidget)
        self.ShowGraph.setGeometry(QtCore.QRect(240, 160, 281, 51))
        self.ShowGraph.setObjectName("ShowGraph")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        
        self.AddFunction()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.DownloadGraph.setText(_translate("MainWindow", "Загрузить граф"))
        self.ShowGraph.setText(_translate("MainWindow", "Вывести изображение"))

    def AddFunction(self):
        self.DownloadGraph.clicked.connect(lambda: self.UnpackGraph())
        
    def UnpackGraph(self): # Распаковка графа
        with open("graph.txt", 'r') as f:
            txtgraph = f.readlines() # Список строк файла

            VertexCount = int(txtgraph[0].split()[0])
            EdgesCount = int(txtgraph[0].split()[1])

            StartVertices = []
            FinishVertices = []
            Weights = []
            for i in range(EdgesCount): # Формируем списки вершин и весов
                StartVertices.append(txtgraph[1+VertexCount+i].split()[0])
                FinishVertices.append(txtgraph[1+VertexCount+i].split()[1])
                Weights.append(txtgraph[1+VertexCount+i].split()[2])

            DF = pd.DataFrame({'S': StartVertices, 'F': FinishVertices, "weight": Weights}) # Формируем dataframe рёбер
            print(DF)
            
            G = nx.from_pandas_edgelist(df=DF, source='S', target='F', edge_attr="weight", create_using=nx.DiGraph()) # Присоединяем dataframe к графу

            # Рисуем граф
            pos = nx.shell_layout(G)
            nx.draw(G, pos, with_labels=True)
            labels = {e: G.edges[e]['weight'] for e in G.edges}
            nx.draw_networkx_edge_labels(G, pos, edge_labels=labels)
            plt.show()
    
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
